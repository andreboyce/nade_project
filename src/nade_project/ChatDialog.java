/*
 * ChatDialog.java
 *
 * Created on March 8, 2007, 3:41 AM
 */

package nade_project;

import java.io.*;
import java.util.*;
import javax.swing.text.*;
import javax.swing.text.html.*;


/**
 *This dialog allows the user to chat with other clients.
 * @author  Default
 */
public class ChatDialog extends javax.swing.JFrame
{
    
    /**NadeClient class.*/
    NadeClient nadeClient;

    /** Creates new form ChatDialog */
    public ChatDialog( NadeClient _nadeClient )
    {
        initComponents();
        nadeClient = _nadeClient;
        try
        {
           jEditorPaneMessages.setContentType( "text/html" );
           jEditorPaneMessages.setText( "<html></html>" );
        }
        catch( Exception e )
        {
           System.out.println( "Exception: " + e.getMessage() );
        }
    }

    /**Update the messages in the jEditorPaneMessages*/
    public void UpdateMessages()
    {
       jEditorPaneMessages.setText( "<html></html>" );
       GroupStatus gs = nadeClient.GetGroup( String.valueOf( jComboBoxGroup.getSelectedItem() ) );
       if( gs != null )
       {
          ArrayList<String> conversation = gs.getConversation();
          if( conversation != null )
          {
             for( int i=0 ; i<conversation.size() ; i++ )
             {
                AddConversationMessage( conversation.get( i ) );
             }
          }
       }
    }
    
    /**Send message.*/
    public void Send()
    {
       if( jComboBoxGroup.getSelectedItem() == null )
       {
          return;
       }
       if( jTextAreaMessage.getText().length() <= 0 || jTextAreaMessage.getText().equals( "\n" ) )
       {
          if( jTextAreaMessage.getText().equals( "\n" ) )
          {
             jTextAreaMessage.setText( "" );
          }
          return;
       }
       nadeClient.SendChat();
       jEditorPaneMessages.setText("<html></html>");
       GroupStatus gs = nadeClient.GetGroup( String.valueOf( jComboBoxGroup.getSelectedItem() ) );
       if( gs != null )
       {
          gs.AddConversationMessage( nadeClient.ourGroupStatus.getName() + ": " + jTextAreaMessage.getText() );
          ArrayList<String> conversation = gs.getConversation();
          if( conversation != null )
          {
             for( int i=0 ; i<conversation.size() ; i++ )
             {
                AddConversationMessage( conversation.get( i ) );
             }
          }
          else
          {
             AddConversationMessage( nadeClient.ourGroupStatus.getName() + ": " + jTextAreaMessage.getText() );
          }
       }
       else
       {
          AddConversationMessage( nadeClient.ourGroupStatus.getName() + ": " + jTextAreaMessage.getText() );
       }
       jTextAreaMessage.setText( "" );
       jTextAreaMessage.setSelectionStart( 0 );
    }

    /**Add message to conversation*/
    void AddConversationMessage( String message )
    {
        try
        {
           message = message.replaceAll( "</html>", "" );

           HTMLEditorKit      kit = (HTMLEditorKit) jEditorPaneMessages.getEditorKit();
           Document      document = jEditorPaneMessages.getDocument();
           StringReader    reader = new StringReader( "<font size='5'>" + message + "</font>" + "<br>" );
           kit.read( reader, document, document.getLength() );
           if( !jEditorPaneMessages.isFocusOwner() )
           {
              jEditorPaneMessages.setSelectionStart( document.getLength() );
           }            
        }
        catch( Exception e )
        {
           System.out.println( "DisplayConversation.displayconversation - Exception: " + e.getMessage() );
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaMessage = new javax.swing.JTextArea();
        jButtonSend = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jComboBoxGroup = new javax.swing.JComboBox();
        jLabelGroup = new javax.swing.JLabel();
        jButtonSendAll = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPaneMessages = new javax.swing.JEditorPane();

        setTitle("Chat Dialog.");
        jTextAreaMessage.setColumns(20);
        jTextAreaMessage.setRows(5);
        jTextAreaMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextAreaMessageKeyTyped(evt);
            }
        });

        jScrollPane1.setViewportView(jTextAreaMessage);

        jButtonSend.setText("Send");
        jButtonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendActionPerformed(evt);
            }
        });

        jButtonClear.setText("Clear");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jComboBoxGroup.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxGroupItemStateChanged(evt);
            }
        });

        jLabelGroup.setText("Group");

        jButtonSendAll.setText("Send All");
        jButtonSendAll.setToolTipText("Send To All Clients");
        jButtonSendAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendAllActionPerformed(evt);
            }
        });

        jEditorPaneMessages.setEditable(false);
        jScrollPane2.setViewportView(jEditorPaneMessages);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabelGroup)
                        .addGap(51, 51, 51)
                        .addComponent(jComboBoxGroup, 0, 310, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                        .addComponent(jButtonSendAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSend)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelGroup))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSend)
                    .addComponent(jButtonSendAll)
                    .addComponent(jButtonClear))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxGroupItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxGroupItemStateChanged
       UpdateMessages();
    }//GEN-LAST:event_jComboBoxGroupItemStateChanged

    private void jTextAreaMessageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaMessageKeyTyped
       if( nadeClient != null )
       {
          if( evt.getKeyChar() == java.awt.event.KeyEvent.VK_ENTER )
          {
             Send();
          }
       }
    }//GEN-LAST:event_jTextAreaMessageKeyTyped

    private void jButtonSendAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSendAllActionPerformed
       if( nadeClient != null )
       {
          if( jTextAreaMessage.getText().length() <= 0 )
          {
             return;
          }
          nadeClient.SendChatAll();
          ArrayList<GroupStatus> gsl = nadeClient.groupStatusList;
          for( int i=0; i<gsl.size() ; i++ )
          {
             gsl.get( i ).AddConversationMessage( nadeClient.ourGroupStatus.getName() + ": " + jTextAreaMessage.getText() );
          }
          jTextAreaMessage.setText( "" );
       }
    }//GEN-LAST:event_jButtonSendAllActionPerformed

    private void jButtonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSendActionPerformed
       if( nadeClient != null )
       {
          Send();
       }
    }//GEN-LAST:event_jButtonSendActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
       jTextAreaMessage.setText( "" );
    }//GEN-LAST:event_jButtonClearActionPerformed
    
    /**@return jTextAreaMessage*/
    javax.swing.JTextArea getjTextAreaMessage()
    {
       return jTextAreaMessage;
    }

    /**@return jButtonSend*/
    javax.swing.JButton getjButtonSend()
    {
       return jButtonSend;
    }

    /**@return jButtonSendAll*/
    javax.swing.JButton getjButtonSendAll()
    {
       return jButtonSendAll;
    }

    /**@return jComboBoxGroup*/
    javax.swing.JComboBox getjComboBoxGroup()
    {
       return jComboBoxGroup;
    }

    /**@return jEditorPaneMessages*/
    javax.swing.JEditorPane getjEditorPaneMessages()
    {
        return jEditorPaneMessages;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonSend;
    private javax.swing.JButton jButtonSendAll;
    private javax.swing.JComboBox jComboBoxGroup;
    private javax.swing.JEditorPane jEditorPaneMessages;
    private javax.swing.JLabel jLabelGroup;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaMessage;
    // End of variables declaration//GEN-END:variables
    
}
