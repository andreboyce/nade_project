/*
 * SecurityBreachDialog.java
 *
 * Created on March 7, 2007, 5:14 PM
 */

package nade_project;

/**
 *This dialog allows the user to attack the other clients.
 * @author  Default
 */
public class SecurityBreachDialog extends javax.swing.JFrame
{
    /** NADE client class*/
    NadeClient nadeClient;

    /** Creates new form SecurityBreachDialog */
    public SecurityBreachDialog( NadeClient _nadeClient )
    {
       initComponents();
       nadeClient = _nadeClient;
    }

    /**Sends a fake PROTOCOL_RESOURCE_ACCOUNT message to all clients.*/
    public void SendFakePROTOCOL_RESOURCES_ACCOUNTAll()
    {
       if( nadeClient != null )
       {
          String receiver = "";
          for( int i=0 ; i<nadeClient.groupStatusList.size() ; i++ )
          {
             receiver = nadeClient.groupStatusList.get(i).getName();
             nadeClient.SendMessage( 0, nadeClient.PROTOCOL_RESOURCES_ACCOUNT, receiver, "-2000.0" );
          }
       }
    }
    
    /**Sends a fake PROTOCOL_RESOURCE_ACCOUNT message.
     *@param receiver Receipient
     */
    public void SendFakePROTOCOL_RESOURCES_ACCOUNT( String receiver )
    {
       if( nadeClient != null )
       {
          GroupStatus gs = nadeClient.GetGroup( receiver );
          if( gs != null )
          {
             nadeClient.SendMessage( 0, nadeClient.PROTOCOL_RESOURCES_ACCOUNT, gs.getName(), "-2000.0" );
          }
       }
    }
    
    /**Sends a fake PROTOCOL_PROFIT_ACCOUNT message to all clients.*/
    public void SendFakePROTOCOL_PROFIT_ACCOUNTAll()
    {
       if( nadeClient != null )
       {
          String receiver = "";
          for( int i=0 ; i<nadeClient.groupStatusList.size() ; i++ )
          {
             receiver = nadeClient.groupStatusList.get(i).getName();
             nadeClient.SendMessage( 0, nadeClient.PROTOCOL_PROFIT_ACCOUNT, receiver, "-2000.0" );
          }
       }
    }
    
    /**Sends a fake PROTOCOL_PROFIT_ACCOUNT message.
     *@param receiver Receipient
     */
    public void SendFakePROTOCOL_PROFIT_ACCOUNT( String receiver )
    {
       if( nadeClient != null )
       {
          GroupStatus gs = nadeClient.GetGroup( receiver );
          if( gs != null )
          {
             nadeClient.SendMessage( 0, nadeClient.PROTOCOL_PROFIT_ACCOUNT, gs.getName(), "-2000.0" );
          }
       }
    }
    
    /**Sends a fake disconnect message to all clients.*/
    public void SendFakeDisconnectAll()
    {
       if( nadeClient != null )
       {
          String receiver = "";
          for( int i=0 ; i<nadeClient.groupStatusList.size() ; i++ )
          {
             receiver = nadeClient.groupStatusList.get(i).getName();
             nadeClient.SendMessage( 0, nadeClient.PROTOCOL_SERVER_TERMINATE, receiver, "" );
          }
       }
    }
    
    /**Sends a fake disconnect message.
     *@param receiver Receipient
     */
    public void SendFakeDisconnect( String receiver )
    {
       if( nadeClient != null )
       {
          GroupStatus gs = nadeClient.GetGroup( receiver );
          if( gs != null )
          {
             nadeClient.SendMessage( 0, nadeClient.PROTOCOL_SERVER_TERMINATE, gs.getName(), "" );
          }
       }
    }

    /**Sends a fake contract message to all clients.*/
    public void SendFakeContractAll()
    {
       if( nadeClient != null )
       {
          String receiver = "";
          for( int i=0 ; i<nadeClient.groupStatusList.size() ; i++ )
          {
             receiver = nadeClient.groupStatusList.get(i).getName();
             //nadeClient.contract.getNumber();
             nadeClient.SendMessage( 0, nadeClient.PROTOCOL_USE_CONTRACT, receiver, "'Contract100':61:33:3421:-20000.0:5:15:1.0:605:822" );
          }
       }
    }
    
    /**Sends a fake contract message.
     *@param receiver Receipient
     */
    public void SendFakeContract( String receiver )
    {
       if( nadeClient != null )
       {
          GroupStatus gs = nadeClient.GetGroup( receiver );
          if( gs != null )
          {
             nadeClient.SendMessage( 0, nadeClient.PROTOCOL_USE_CONTRACT, gs.getName(), "'Contract100':61:33:3421:-20000.0:5:15:1.0:605:822" );
          }
       }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jComboBoxGroup = new javax.swing.JComboBox();
        jLabelReciepient = new javax.swing.JLabel();
        jLabelAttackType = new javax.swing.JLabel();
        jComboBoxAttackType = new javax.swing.JComboBox();
        jButtonAttack = new javax.swing.JButton();
        jComboBoxMessageType = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        setTitle("Security Dialog");
        jComboBoxGroup.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));

        jLabelReciepient.setText("Recipient");

        jLabelAttackType.setText("Attack Type");

        jComboBoxAttackType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Invalid Message" }));

        jButtonAttack.setText("Attack");
        jButtonAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAttackActionPerformed(evt);
            }
        });

        jComboBoxMessageType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CONTRACT", "DISCONNECT", "PROFIT_ACCOUNT", "RESOURCES_ACCOUNT", "RESOURCES", "PROFIT" }));

        jLabel1.setText("Message Type");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonAttack)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelReciepient)
                            .addComponent(jLabelAttackType)
                            .addComponent(jLabel1))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxMessageType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxAttackType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxGroup, 0, 159, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelReciepient)
                    .addComponent(jComboBoxGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAttackType)
                    .addComponent(jComboBoxAttackType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxMessageType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAttack)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**Performs an attack on other clients.*/
    private void jButtonAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAttackActionPerformed
       if( nadeClient != null )
       {
          try
          {
             String attackType  = String.valueOf( jComboBoxAttackType.getSelectedItem()  );
             String   receiver  = String.valueOf( jComboBoxGroup.getSelectedItem()       );
             String messagetype = String.valueOf( jComboBoxMessageType.getSelectedItem() );
             int actionNum = nadeClient.PROTOCOL_USE_CONTRACT;
             if( attackType.equals( "Invalid Message" ) )
             {
                if( messagetype.equals( "CONTRACT" ) )
                {
                   if( receiver.equals( "All" ) )
                   {
                      SendFakeContractAll();
                   }
                   else
                   {
                      SendFakeContract( receiver );
                   }
                }
                else if( messagetype.equals( "DISCONNECT" ) )
                {
                   if( receiver.equals( "All" ) )
                   {
                      SendFakeDisconnectAll();
                   }
                   else
                   {
                      SendFakeDisconnect( receiver );
                   }
                }
                else if( messagetype.equals( "PROFIT_ACCOUNT" ) )
                {
                   if( receiver.equals( "All" ) )
                   {
                      SendFakePROTOCOL_PROFIT_ACCOUNTAll();
                   }
                   else
                   {
                      SendFakePROTOCOL_PROFIT_ACCOUNT( receiver );
                   }
                }
                else if( messagetype.equals( "RESOURCES_ACCOUNT" ) )
                {
                   if( receiver.equals( "All" ) )
                   {
                      SendFakePROTOCOL_RESOURCES_ACCOUNTAll();
                   }
                   else
                   {
                      SendFakePROTOCOL_RESOURCES_ACCOUNT( receiver );
                   }
                }
                else if( messagetype.equals( "RESOURCES" ) )
                {
                }
                else if( messagetype.equals( "PROFIT" ) )
                {
                }
             }
          }
          catch( Exception e )
          {
             nadeClient.display( "Exception: " + e.getMessage() );
          }
       }
    }//GEN-LAST:event_jButtonAttackActionPerformed

    /**@return jComboBoxGroup*/
    javax.swing.JComboBox getjComboBoxGroup()
    {
       return jComboBoxGroup;
    }

    /**@return jComboBoxAttackType*/
    javax.swing.JComboBox getjComboBoxAttackType()
    {
       return jComboBoxAttackType;
    }

    /**@return jComboBoxMessageType*/
    javax.swing.JComboBox getjComboBoxMessageType()
    {
       return jComboBoxMessageType;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAttack;
    private javax.swing.JComboBox jComboBoxAttackType;
    private javax.swing.JComboBox jComboBoxGroup;
    private javax.swing.JComboBox jComboBoxMessageType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAttackType;
    private javax.swing.JLabel jLabelReciepient;
    // End of variables declaration//GEN-END:variables
    
}
